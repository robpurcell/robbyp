<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: web | Against A Dark Background...]]></title>
  <link href="http://robbyp.com/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://robbyp.com/"/>
  <updated>2013-10-20T23:24:31+01:00</updated>
  <id>http://robbyp.com/</id>
  <author>
    <name><![CDATA[Rob Purcell]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vert.x with a Gradle build]]></title>
    <link href="http://robbyp.com/blog/2013/07/24/vert-dot-x-with-a-gradle-build/"/>
    <updated>2013-07-24T18:34:00+01:00</updated>
    <id>http://robbyp.com/blog/2013/07/24/vert-dot-x-with-a-gradle-build</id>
    <content type="html"><![CDATA[<p>I <a href="/blog/2013/07/23/playing-with-vertx/">previously</a> set up Vert.x with a Gradle build.  Now it&rsquo;s time to have a play with it and see what we can do.</p>

<pre><code>$ ./gradlew test
</code></pre>

<p>A lot of stuff downloads!</p>

<pre><code>./gradlew idea
</code></pre>

<p>To install the support for IntelliJ.</p>

<p>Moving on to the <a href="http://vertx.io/dev_guide.html">dev guide</a>.</p>

<p>Downloaded the <a href="http://vertx.io/examples.html">examples</a>.  Running the Groovy webapp:</p>

<pre><code>cd vertx-examples/src/modules/groovy/webapp
vertx runmod io.vertx~example-web-app~1.0
</code></pre>

<p>As <code>webapp</code> has a <code>mods</code> folder, the vertx command can discover the module and run it.  See <a href="http://vertx.io/mods_manual.html#how-vertx-locates-modules">here</a> for details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting started with Vert.x]]></title>
    <link href="http://robbyp.com/blog/2013/07/23/playing-with-vertx/"/>
    <updated>2013-07-23T07:16:00+01:00</updated>
    <id>http://robbyp.com/blog/2013/07/23/playing-with-vertx</id>
    <content type="html"><![CDATA[<p>Today, I&rsquo;m trying to see if I can figure out what Vert.x is.  I&rsquo;m following the installation doc <a href="http://vertx.io/install.html">here</a>.</p>

<p>I intalled Vert.x with <a href="http://gvmtool.net/">gvm</a>:</p>

<pre><code>$ gvm install vertx
$ gvm current vertx
Using vertx version 2.0.0-final
</code></pre>

<!-- more -->


<p>I created the Hello World example:</p>

<pre><code>$ vi server.js
$ vertx run server.js
Downloading io.vertx~lang-rhino~2.0.0-final. Please wait...
Downloading 100%
Module io.vertx~lang-rhino~2.0.0-final successfully installed
</code></pre>

<p>Then I started following the <a href="http://vertx.io/manual.html">Main Manual</a></p>

<p>Aside: running Vert.x on Heroku immediately jumped to mind: <a href="http://fbflex.wordpress.com/2012/05/02/running-vert-x-applications-on-heroku/">found this</a></p>

<p>Developing an app using Gradle for build management seemed like the way <a href="http://vertx.io/gradle_dev.html">forward</a></p>

<p>Clone template project locally:</p>

<pre><code>$ git clone https://github.com/vert-x/vertx-gradle-template.git my-vertx-module
$ git remote rm origin
$ git remote add --track master origin git@github.com:robpurcell/verdant.git
$ git pull
$ git push origin master
</code></pre>

<p>As per the above, I created the repo on Github and then merged in the cloned template: <a href="http://caiustheory.com/adding-a-remote-to-existing-git-repo">see here</a> for some more details of the way to get remote tracking working properly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes for a prospective Web developer]]></title>
    <link href="http://robbyp.com/blog/2013/04/16/notes-for-a-prospective-web-developer/"/>
    <updated>2013-04-16T19:44:00+01:00</updated>
    <id>http://robbyp.com/blog/2013/04/16/notes-for-a-prospective-web-developer</id>
    <content type="html"><![CDATA[<p>After a good while, my second blog posting, and the first of the new decade&hellip; Yes, at this rate my third will be in 2025!</p>

<p>Some notes on what I&rsquo;m doing to get my my web application up and running.  Note, I&rsquo;m running this effort in tandem with another blog post on using Vert.x, with the hope that these efforts may come together at some stage&hellip; We shall see.</p>

<h4>tl;dr I&rsquo;m going to try and get a Bootstrap site laid out using Grunt and Compass.</h4>

<h3>Install Grunt</h3>

<p><code>
npm install -g grunt-cli
npm install -g grunt-init
</code>
Get the gruntfile template, create Gruntfile.js and package.json
<code>
git clone git@github.com:gruntjs/grunt-init-gruntfile.git ~/.grunt-init/gruntfile
grunt-init gruntfile
npm init
</code></p>

<!-- more -->


<h4>Install grunt-contribs</h4>

<p>Ensure that these are also referenced in Gruntfile.js!
<code>
npm install grunt-contrib-compass --save-dev
npm install grunt-contrib-concat --save-dev
npm install grunt-contrib-uglify --save-dev
npm install grunt-contrib-nodeunit --save-dev
npm install grunt-contrib-jshint --save-dev
npm install grunt-contrib-watch --save-dev
npm install grunt-contrib-qunit --save-dev
</code></p>

<h3>Install Compass</h3>

<p>Make sure Ruby is up to date, and Gems are on the PATH
<code>
ruby -v
brew upgrade ruby (if necessary)
export PATH=$PATH:/usr/local/opt/ruby/bin
</code></p>

<h4>Create the SASS folder structure</h4>

<p><code>
compass create
</code></p>

<h4>Add compass config to Gruntfile.js</h4>

<p>``` javascript
grunt.initConfig({
  compass: {                  // Task</p>

<pre><code>dist: {                   // Target
  options: {              // Target options
    sassDir: 'sass',
    cssDir: 'stylesheets',
    environment: 'production'
  }
},
dev: {                    // Another target
  options: {
    sassDir: 'sass',
    cssDir: 'stylesheets'
  }
}
</code></pre>

<p>  }
});
```
Make sure that config.rb and Gruntfile.js are consistent!</p>

<h3>Copy the Bootstrap files into place</h3>

<p>Easy enough</p>
]]></content>
  </entry>
  
</feed>
